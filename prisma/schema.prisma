generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Currency {
    id Int @id @unique @default(autoincrement())

    name  CurrencyName
    price Float

    updateAt DateTime @updatedAt
}

model Characteristics {
    id    Int    @id @unique @default(autoincrement())
    title String
    text  String

    product   Product @relation(fields: [productId], references: [id])
    productId Int
}

model Post {
    id    Int    @id @unique @default(autoincrement())
    title String
    img   String

    price      Int?
    text       String?
    buttonText String?
    buttonUrl  String?
    wbUrl      String?
}

model Product {
    id          Int      @id @unique @default(autoincrement())
    title       String
    image       String[]
    price       Int
    oldPrice    Int?
    quntity     Int
    description String?
    article     String?

    cartItem        CartItem[]
    characteristics Characteristics[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model User {
    id Int @id @unique @default(autoincrement())

    name       String?
    surname    String?
    patronymic String?
    number     String?
    email      String  @unique

    role UserRole @default(USER)

    provider   String?
    providerId String?
    verified   DateTime?

    pointOfIssue String?

    address  String?
    entrance Int?
    floor    Int?
    flat     Int?

    cart             Cart?
    order            Order[]
    verificationCode VerificationCode[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Cart {
    id Int @id @unique @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    token String

    totalAmount Int @default(0)
    quantity    Int @default(0)

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt

    items CartItem[]
}

model CartItem {
    id Int @id @default(autoincrement())

    productItem   Product @relation(fields: [productItemId], references: [id])
    productItemId Int

    Cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    quantity Int

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String

    expiredAt DateTime @default(now())
}

model Order {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int
    paymentId   String
    paymentUrl  String
    status      Status
    currency    CurrencyName

    items Json

    email      String
    name       String
    surname    String
    patronymic String
    number     String

    address      String
    track        String?
    type         String
    delivery_sum Int?
    tariff_name  String?
    period_min   Int?
    period_max   Int?

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

enum UserRole {
    ADMIN
    USER
}

enum Status {
    pending
    onTheWay
    goingTo
    readyForIssue
    delivered
    fulfilled
    delayed
    rejected
    paidFor
}

enum CurrencyName {
    RUB
    BYN
    KZT
}
